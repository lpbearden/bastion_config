---
version: '2'
services:
  plex:
    image: plexinc/pms-docker
    container_name: plex
    volumes:
      - /opt/plex:/config
      - /mnt/storage:/data
    network_mode: host
    ports:
      - 32400:32400
    restart: always
    environment:
      - PLEX_CLAIM="nope"
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
  
  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /opt/sabnzbd:/config
      - /mnt/storage/downloads:/downloads
    ports:
      - 27020:8080
      - 27021:9090
    restart: always
  
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    volumes:
      - /opt/sonarr:/config
      - /mnt/storage/tv:/tv
      - /mnt/storage/anime:/anime
      - /mnt/storage/downloads:/downloads
    ports:
      - 27022:8989
    links:
      - sabnzbd
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
  
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    volumes:
      - /opt/radarr:/config
      - /mnt/storage/movies:/movies
      - /mnt/storage/anime:/anime
      - /mnt/storage/downloads:/downloads
    ports:
      - 27023:7878
    links:
      - sabnzbd
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    restart:
      always
  
  portainer:
    image: portainer/portainer
    container_name: portainer
    ports:
      - 27024:9000
    volumes:
      - /opt/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart:
      always

  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=America/Indiana/Indianapolis
    volumes:
      - /opt/tautulli:/config
      - /opt/plex/Library/Application Support/Plex Media Server/Logs:/logs
    ports:
      - 8181:8181
    restart: unless-stopped
  
  lazylibrarian:
    image: linuxserver/lazylibrarian
    container_name: lazylibrarian
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=America/Indiana/Indianapolis
      - DOCKER_MODS=linuxserver/calibre-web:calibre
    volumes:
      - /opt/lazylibrarian:/config
      - /mnt/storage/downloads:/downloads
      - /mnt/storage/books:/books
    ports:
      - 5299:5299
    restart: unless-stopped

  ombi:
    image: linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=America/Indiana/Indianapolis
    volumes:
      - /opt/ombi/:/config
    ports:
      - 3579:3579
    restart: unless-stopped

  calibre:
    image: linuxserver/calibre
    container_name: calibre
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=America/Indiana/Indianapolis
      - GUAC_USER=agenta
      - GUAC_PASS=d3ed5c9ca8c3b8d86262fd26ceb582b6
    volumes:
      - /opt/calibre:/config
    ports:
      - 27025:8080
      - 27026:8081
    restart: unless-stopped

  calibre-web:
    image: linuxserver/calibre-web
    container_name: calibre-web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=America/Indiana/Indianapolis
      - DOCKER_MODS=linuxserver/calibre-web:calibre
    volumes:
      - /opt/calibre_web:/config
      - /opt/calibre/Calibre Library:/books
    ports:
      - 27027:8083
    restart: unless-stopped

  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=America/Indiana/Indianapolis
    volumes:
      - /opt/heimdall:/config
    ports:
      - 27030:80
      - 27031:443
    restart: unless-stopped

  traefik:
    hostname: traefik
    container_name: traefik
    image: traefik:v1.7.16
    restart: always
    domainname: ${DOMAINNAME}
    networks:
      - default
      - traefik_proxy
    ports:
      - 80:80
      - 8080:8080
      - 443:443
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/traefik/:/etc/traefik
      - /opt/shared:/shared
    labels:
      - "traefik.enable: 'true'"
      - "traefik.frontend.auth.basic.users: '${HTTP_USERNAME}:${HTTP_PASSWORD}'"
      - "traefik.backend: 'traefik'"
      - "traefik.frontend.rule: 'Host:traefik.${DOMAINNAME}'"
      - "traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'"
      - "traefik.port: '8080'"
      - "traefik.docker.network: 'traefik_proxy'"
      - "traefik.frontend.headers.SSLRedirect: 'true'"
      - "traefik.frontend.headers.STSSeconds: '315360000'"
      - "traefik.frontend.headers.browserXSSFilter: 'true'"
      - "traefik.frontend.headers.contentTypeNosniff: 'true'"
      - "traefik.frontend.headers.forceSTSHeader: 'true'"
      - "traefik.frontend.headers.SSLHost: 'lpbearden.com'"
      - "traefik.frontend.headers.STSIncludeSubdomains: 'true'"
      - "traefik.frontend.headers.STSPreload: 'true'"

  kitana:
    image: pannal/kitana:latest
    restart: always
    volumes:
      - /opt/shared:/shared
      - /opt/kitana:/app/data
    ports:
      - 31337:31337
    environment:
      - PUID=${PUID}
      - PGOD=${PGID}
      - TZ=America/Indiana/Indianapolis

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    restart: unless-stopped
    ports:
      - 9117:9117
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=America/Indiana/Indianapolis # timezone, defined in .env
    volumes:
      - /mnt/storage/downloads/torrent-blackhole:/downloads # place where to put .torrent files for manual download
      - /opt/jackett:/config # config files

  deluge:
    image: linuxserver/deluge
    container_name: deluge
    ports:
      - 8112:8112
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=America/Indiana/Indianapolis
      - UMASK_SET=022 #optional
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - /opt/deluge:/config
      - /mnt/storage/downloads:/downloads
    restart: unless-stopped
  
  makemkv:
    image: jlesage/makemkv
    container_name: makemkv
    ports:
      - 5800:5800
    volumes:
      - /opt/MakeMKV:/config
      - /mnt/storage:/storage
      - /mnt/storage/MakeMKV/output:/output
    devices:
      - /dev/sr0:/dev/sr0
      - /dev/sg6:/dev/sg6

  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=America/Indiana/Indianapolis
      - UMASK_SET=022 #optional
    volumes:
      - /opt/jellyfin:/config
      - /mnt/storage/tv:/data/tvshows
      - /mnt/storage/movies:/data/movies
      - /opt/vc/lib:/opt/vc/lib #optional
      - /mnt/storage/anime:/data/anime
    ports:
      - 8096:8096
    restart: unless-stopped

networks:
  default:
  traefik_proxy:
    external: true
